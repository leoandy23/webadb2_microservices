import { HttpService } from '@nestjs/axios';
export declare class GatewayController {
    private readonly httpService;
    private readonly URL_AUTH_SERVICE;
    private readonly URL_USER_SERVICE;
    private readonly URL_PROJECT_SERVICE;
    private readonly URL_TASK_SERVICE;
    constructor(httpService: HttpService);
    login(body: any): Promise<any>;
    register(body: any): Promise<any>;
    sendPasswordResetEmail(email: string): Promise<any>;
    resetPassword(token: string, newPassword: string): Promise<any>;
    validateToken(authHeader: string): Promise<any>;
    getUsers(authHeader: string): Promise<any>;
    getUser(id: string, authHeader: string): Promise<any>;
    createUser(body: any): Promise<any>;
    updateUser(id: string, body: any, authHeader: string): Promise<any>;
    removeUser(id: string, authHeader: string): Promise<any>;
    createProject(body: any, authHeader: string): Promise<any>;
    getProjects(authHeader: string): Promise<any>;
    getProject(id: string, authHeader: string): Promise<any>;
    updateProject(id: string, body: any, authHeader: string): Promise<any>;
    removeProject(id: string, authHeader: string): Promise<any>;
    findRecentProjects(userId: string, authHeader: string): Promise<any>;
    findProjectsByUser(userId: string, authHeader: string): Promise<any>;
    createTask(body: any, authHeader: string): Promise<any>;
    getTasks(authHeader: string): Promise<any>;
    getTask(id: string, authHeader: string): Promise<any>;
    updateTask(id: string, body: any, authHeader: string): Promise<any>;
    removeTask(id: string, authHeader: string): Promise<any>;
    findTasksByProjectId(projectId: string, authHeader: string): Promise<any>;
    getTaskById(id: string, authHeader: string): Promise<any>;
    findTasksByUserId(userId: string, authHeader: string): Promise<any>;
    createTaskAssignment(body: any, authHeader: string): Promise<any>;
    getTaskAssignments(authHeader: string): Promise<any>;
    getTaskAssignment(id: string, authHeader: string): Promise<any>;
    updateTaskAssignment(idtask: string, body: any, authHeader: string): Promise<any>;
    removeTaskAssignment(id: string, authHeader: string): Promise<any>;
    private extractToken;
}
